
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BREAK CLASS DEF ELIF ELSE FOR IF LEN NUMBER OR PRINT RETURN VARIABLE WHILEsegment : statementsstatements : statements statement\n                  | statement\n    statement : assignment\n             | operation\n             | print\n             | if\n             | else\n             | elif\n             | while\n             | break\n             | for\n             | function\n             | runFunction\n             | return\n    return : RETURN\n              | RETURN term\n    \n    function : DEF VARIABLE '(' functionTerms ')'  '{' statements '}'\n             | DEF VARIABLE '('  ')'  '{' statements '}'\n    \n    runFunction : VARIABLE '(' runFunctionTerms ')'\n                | VARIABLE '('  ')'\n    \n    runFunctionTerms : term\n                  | runFunctionTerms ',' term\n    \n    functionTerms : VARIABLE\n                  | functionTerms ',' VARIABLE\n    \n    break : BREAK\n    \n    while : WHILE '(' condition ')' '{' statements '}'\n    \n    for : FOR '(' assignment ';' condition ';' VARIABLE '+' '+' ')' '{' statements '}'\n    \n    if : IF '(' condition ')' '{' statements '}'\n    \n    else : ELSE '{' statements '}'\n    \n    elif : ELIF '(' condition ')' '{' statements '}'\n    \n    and : condition AND condition\n    \n    or : condition OR condition\n    \n    condition : greater\n              | greater_equal\n              | less\n              | less_equal\n              | equal_equal\n              | and\n              | or\n    \n    greater   : term '>' term\n              \n    greater_equal   : term '>' '=' term\n              \n    less   : term '<' term\n              \n    less_equal   : term '<' '=' term\n              \n    equal_equal   : term '=' '=' term\n              \n    assignment : VARIABLE '=' term\n                | VARIABLE '=' array\n                | array_term '=' term\n                | VARIABLE '+' '=' term\n                | array_term '+' '=' term\n                | VARIABLE '-' '=' term\n                | array_term '-' '=' term\n                | VARIABLE '*' '=' term\n                | array_term '*' '=' term\n                | VARIABLE '/' '=' term\n                | array_term '/' '=' term\n    \n    operation : ADD\n              | SUB\n              | MUL\n              | DIV\n              | DIV_ext\n              | '(' operation ')'\n    \n    ADD : term '+' term\n\n    \n    SUB : term '-' term\n    \n    MUL : term '*' term\n\n    \n    DIV : term '/' term\n    \n    DIV_ext : term '/' '/' term\n    print : PRINT '(' pcontent ')' \n     array_term : VARIABLE '[' term ']'\n    \n    array : '[' pcontent ']'\n    \n    pcontent : pcontent ',' term\n             | term\n    \n    term : VARIABLE\n         | NUMBER\n         | operation\n         | array_term\n         | len\n         | runFunction\n    \n    len : LEN '(' VARIABLE ')'\n    "
    
_lr_action_items = {'ELIF':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[1,-26,-6,-5,-59,-61,-12,-9,-7,1,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,1,-2,-75,-17,-62,-21,-47,-46,1,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,1,1,-70,1,1,1,1,1,1,1,-31,1,-19,-29,-27,-18,1,1,-28,]),'[':([8,39,50,103,],[48,48,90,48,]),'{':([12,114,116,133,134,146,174,],[51,145,148,152,153,159,175,]),'DEF':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[2,-26,-6,-5,-59,-61,-12,-9,-7,2,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,2,-2,-75,-17,-62,-21,-47,-46,2,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,2,2,-70,2,2,2,2,2,2,2,-31,2,-19,-29,-27,-18,2,2,-28,]),'-':([8,9,10,11,13,21,22,23,29,31,33,35,39,40,41,42,62,63,68,78,79,84,85,87,91,97,101,103,105,106,107,108,120,121,122,124,125,126,129,130,131,132,135,137,138,140,149,150,155,156,157,],[49,-75,-59,-61,54,-77,-60,-57,-74,66,-78,-58,-73,-75,-78,-76,-75,66,66,-62,66,66,-21,66,66,66,54,49,66,66,66,66,66,66,-20,66,-69,66,66,66,66,66,-79,66,66,66,66,66,66,66,66,]),'NUMBER':([0,3,5,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,37,39,41,42,43,46,48,50,51,56,57,58,59,62,63,64,65,66,67,78,81,82,85,86,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,112,113,118,119,120,121,122,123,124,125,126,128,129,130,131,132,135,136,137,139,141,142,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[29,-26,29,-6,-5,-59,-61,-12,-9,-7,29,-13,-77,-60,-57,-4,29,-3,-74,-15,-11,-14,-10,-58,-8,29,-73,-78,-76,29,29,29,29,29,29,29,29,-2,-75,-17,29,29,29,29,-62,29,29,-21,29,29,-47,29,-46,29,29,29,29,29,-48,29,-66,-63,-64,-65,29,29,29,29,-68,29,-53,-55,-20,29,-49,-69,-51,-30,-54,-56,-52,-50,-79,29,-67,29,29,29,29,29,-70,29,29,29,29,29,29,29,-31,29,-19,-29,-27,-18,29,29,-28,]),'(':([0,1,3,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,41,42,43,46,48,50,51,56,57,58,59,62,63,64,65,66,67,78,81,82,85,86,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,112,113,118,119,120,121,122,123,124,125,126,128,129,130,131,132,135,136,137,139,141,142,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[5,37,-26,5,-6,43,46,-5,-59,-61,-12,-9,-7,57,58,5,-13,-77,-60,-57,60,-4,61,5,-3,-74,-15,-11,-14,-10,-58,-8,5,77,46,-78,-76,5,5,5,5,5,5,5,5,-2,-75,-17,5,5,5,5,-62,5,5,-21,5,5,-47,5,-46,5,5,5,5,5,-48,5,-66,-63,-64,-65,5,5,5,5,-68,5,-53,-55,-20,5,-49,-69,-51,-30,-54,-56,-52,-50,-79,5,-67,5,5,5,5,5,-70,5,5,5,5,5,5,5,-31,5,-19,-29,-27,-18,5,5,-28,]),'LEN':([0,3,5,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,37,39,41,42,43,46,48,50,51,56,57,58,59,62,63,64,65,66,67,78,81,82,85,86,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,112,113,118,119,120,121,122,123,124,125,126,128,129,130,131,132,135,136,137,139,141,142,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[24,-26,24,-6,-5,-59,-61,-12,-9,-7,24,-13,-77,-60,-57,-4,24,-3,-74,-15,-11,-14,-10,-58,-8,24,-73,-78,-76,24,24,24,24,24,24,24,24,-2,-75,-17,24,24,24,24,-62,24,24,-21,24,24,-47,24,-46,24,24,24,24,24,-48,24,-66,-63,-64,-65,24,24,24,24,-68,24,-53,-55,-20,24,-49,-69,-51,-30,-54,-56,-52,-50,-79,24,-67,24,24,24,24,24,-70,24,24,24,24,24,24,24,-31,24,-19,-29,-27,-18,24,24,-28,]),'*':([8,9,10,11,13,21,22,23,29,31,33,35,39,40,41,42,62,63,68,78,79,84,85,87,91,97,101,103,105,106,107,108,120,121,122,124,125,126,129,130,131,132,135,137,138,140,149,150,155,156,157,],[44,-75,-59,-61,52,-77,-60,-57,-74,67,-78,-58,-73,-75,-78,-76,-75,67,67,-62,67,67,-21,67,67,67,52,44,67,67,67,67,67,67,-20,67,-69,67,67,67,67,67,-79,67,67,67,67,67,67,67,67,]),'PRINT':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[7,-26,-6,-5,-59,-61,-12,-9,-7,7,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,7,-2,-75,-17,-62,-21,-47,-46,7,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,7,7,-70,7,7,7,7,7,7,7,-31,7,-19,-29,-27,-18,7,7,-28,]),'VARIABLE':([0,2,3,5,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,37,39,41,42,43,46,48,50,51,56,57,58,59,60,61,62,63,64,65,66,67,77,78,81,82,85,86,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,112,113,118,119,120,121,122,123,124,125,126,128,129,130,131,132,135,136,137,139,141,142,145,147,148,151,152,153,158,159,161,162,163,164,165,166,167,168,169,171,175,176,177,],[8,38,-26,39,-6,-5,-59,-61,-12,-9,-7,8,-13,-77,-60,-57,-4,39,-3,-74,-15,-11,-14,-10,-58,-8,39,-73,-78,-76,39,39,39,39,8,39,39,39,-2,100,103,-75,-17,39,39,39,39,117,-62,39,39,-21,39,39,-47,39,-46,8,39,39,39,39,-48,39,-66,-63,-64,-65,39,39,39,39,-68,39,-53,-55,-20,39,-49,-69,-51,-30,-54,-56,-52,-50,-79,39,-67,39,39,39,8,160,8,-70,8,8,8,8,8,8,8,170,-31,8,-19,-29,-27,-18,8,8,-28,]),';':([10,11,21,22,23,29,35,39,41,42,62,69,70,71,72,74,75,76,78,85,89,91,97,102,105,106,107,108,120,121,122,124,125,126,129,130,131,132,135,137,138,140,143,144,151,154,155,156,157,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,-35,-37,-40,-38,-34,-36,-39,-62,-21,-47,-46,-48,136,-66,-63,-64,-65,-53,-55,-20,-49,-69,-51,-54,-56,-52,-50,-79,-67,-41,-43,-32,-33,-70,164,-42,-44,-45,]),',':([10,11,21,22,23,29,35,39,41,42,62,78,79,80,83,84,85,105,106,107,108,115,117,122,125,127,135,137,149,150,160,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,-62,-72,119,123,-22,-21,-66,-63,-64,-65,147,-24,-20,-69,119,-79,-67,-71,-23,-25,]),'FOR':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[26,-26,-6,-5,-59,-61,-12,-9,-7,26,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,26,-2,-75,-17,-62,-21,-47,-46,26,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,26,26,-70,26,26,26,26,26,26,26,-31,26,-19,-29,-27,-18,26,26,-28,]),']':([10,11,21,22,23,29,35,39,41,42,62,78,79,85,87,105,106,107,108,122,125,127,135,137,149,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,-62,-72,-21,125,-66,-63,-64,-65,-20,-69,151,-79,-67,-71,]),'}':([3,6,9,10,11,14,15,16,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,151,158,161,162,163,165,166,167,168,169,171,176,177,],[-26,-6,-5,-59,-61,-12,-9,-7,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,-2,-75,-17,-62,-21,-47,-46,128,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,-70,165,167,168,169,-31,171,-19,-29,-27,-18,177,-28,]),'$end':([3,4,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,59,62,63,78,85,89,91,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,151,165,167,168,169,171,177,],[-26,0,-6,-5,-59,-61,-12,-9,-7,-1,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,-2,-75,-17,-62,-21,-47,-46,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,-70,-31,-19,-29,-27,-18,-28,]),'<':([10,11,21,22,23,29,35,39,41,42,62,68,78,85,105,106,107,108,122,125,135,137,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,110,-62,-21,-66,-63,-64,-65,-20,-69,-79,-67,]),'/':([8,9,10,11,13,21,22,23,29,31,33,35,39,40,41,42,62,63,64,68,78,79,84,85,87,91,97,101,103,105,106,107,108,120,121,122,124,125,126,129,130,131,132,135,137,138,140,149,150,155,156,157,],[45,-75,-59,-61,53,-77,-60,-57,-74,64,-78,-58,-73,-75,-78,-76,-75,64,104,64,-62,64,64,-21,64,64,64,53,45,64,64,64,64,64,64,-20,64,-69,64,64,64,64,64,-79,64,64,64,64,64,64,64,64,]),'OR':([10,11,21,22,23,29,35,39,41,42,62,69,70,71,72,73,74,75,76,78,85,98,99,105,106,107,108,122,125,135,137,138,140,143,144,154,155,156,157,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,-35,-37,-40,-38,113,-34,-36,-39,-62,-21,113,113,-66,-63,-64,-65,-20,-69,-79,-67,-41,-43,113,113,113,-42,-44,-45,]),'ELSE':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[12,-26,-6,-5,-59,-61,-12,-9,-7,12,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,12,-2,-75,-17,-62,-21,-47,-46,12,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,12,12,-70,12,12,12,12,12,12,12,-31,12,-19,-29,-27,-18,12,12,-28,]),'AND':([10,11,21,22,23,29,35,39,41,42,62,69,70,71,72,73,74,75,76,78,85,98,99,105,106,107,108,122,125,135,137,138,140,143,144,154,155,156,157,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,-35,-37,-40,-38,112,-34,-36,-39,-62,-21,112,112,-66,-63,-64,-65,-20,-69,-79,-67,-41,-43,112,112,112,-42,-44,-45,]),'+':([8,9,10,11,13,21,22,23,29,31,33,35,39,40,41,42,62,63,68,78,79,84,85,87,91,97,101,103,105,106,107,108,120,121,122,124,125,126,129,130,131,132,135,137,138,140,149,150,155,156,157,170,172,],[47,-75,-59,-61,55,-77,-60,-57,-74,65,-78,-58,-73,-75,-78,-76,-75,65,65,-62,65,65,-21,65,65,65,55,47,65,65,65,65,65,65,-20,65,-69,65,65,65,65,65,-79,65,65,65,65,65,65,65,65,172,173,]),'>':([10,11,21,22,23,29,35,39,41,42,62,68,78,85,105,106,107,108,122,125,135,137,],[-59,-61,-77,-60,-57,-74,-58,-73,-78,-76,-75,109,-62,-21,-66,-63,-64,-65,-20,-69,-79,-67,]),')':([10,11,21,22,23,29,35,39,40,41,42,46,62,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,98,99,100,105,106,107,108,115,117,122,125,135,137,138,140,143,144,149,150,155,156,157,160,173,],[-59,-61,-77,-60,-57,-74,-58,-73,78,-78,-76,85,-75,-35,-37,-40,-38,114,-34,-36,-39,116,-62,-72,118,122,-22,-21,133,134,135,-66,-63,-64,-65,146,-24,-20,-69,-79,-67,-41,-43,-32,-33,-71,-23,-42,-44,-45,-25,174,]),'RETURN':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[27,-26,-6,-5,-59,-61,-12,-9,-7,27,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,27,-2,-75,-17,-62,-21,-47,-46,27,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,27,27,-70,27,27,27,27,27,27,27,-31,27,-19,-29,-27,-18,27,27,-28,]),'IF':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[17,-26,-6,-5,-59,-61,-12,-9,-7,17,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,17,-2,-75,-17,-62,-21,-47,-46,17,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,17,17,-70,17,17,17,17,17,17,17,-31,17,-19,-29,-27,-18,17,17,-28,]),'WHILE':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[18,-26,-6,-5,-59,-61,-12,-9,-7,18,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,18,-2,-75,-17,-62,-21,-47,-46,18,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,18,18,-70,18,18,18,18,18,18,18,-31,18,-19,-29,-27,-18,18,18,-28,]),'BREAK':([0,3,6,9,10,11,14,15,16,19,20,21,22,23,25,27,28,29,30,32,33,34,35,36,39,41,42,51,59,62,63,78,85,89,91,92,97,105,106,107,108,118,120,121,122,124,125,126,128,129,130,131,132,135,137,145,148,151,152,153,158,159,161,162,163,165,166,167,168,169,171,175,176,177,],[3,-26,-6,-5,-59,-61,-12,-9,-7,3,-13,-77,-60,-57,-4,-16,-3,-74,-15,-11,-14,-10,-58,-8,-73,-78,-76,3,-2,-75,-17,-62,-21,-47,-46,3,-48,-66,-63,-64,-65,-68,-53,-55,-20,-49,-69,-51,-30,-54,-56,-52,-50,-79,-67,3,3,-70,3,3,3,3,3,3,3,-31,3,-19,-29,-27,-18,3,3,-28,]),'=':([8,10,11,13,21,22,23,29,35,39,41,42,44,45,47,49,52,53,54,55,62,68,78,85,101,103,105,106,107,108,109,110,111,122,125,135,137,],[50,-59,-61,56,-77,-60,-57,-74,-58,-73,-78,-76,81,82,86,88,93,94,95,96,-75,111,-62,-21,56,50,-66,-63,-64,-65,139,141,142,-20,-69,-79,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array':([50,],[89,]),'less':([37,57,58,112,113,136,],[75,75,75,75,75,75,]),'greater_equal':([37,57,58,112,113,136,],[69,69,69,69,69,69,]),'ADD':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'segment':([0,],[4,]),'and':([37,57,58,112,113,136,],[76,76,76,76,76,76,]),'len':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'or':([37,57,58,112,113,136,],[71,71,71,71,71,71,]),'DIV':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SUB':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment':([0,19,51,61,92,145,148,152,153,158,159,161,162,163,166,175,176,],[25,25,25,102,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'operation':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[9,40,9,62,62,62,62,62,62,9,62,62,62,62,62,62,62,62,62,62,62,62,9,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,9,9,9,9,9,9,9,9,9,9,9,9,]),'pcontent':([43,90,],[80,127,]),'MUL':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'statement':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[28,59,28,59,28,28,28,28,59,28,59,59,59,59,28,59,]),'greater':([37,57,58,112,113,136,],[74,74,74,74,74,74,]),'equal_equal':([37,57,58,112,113,136,],[72,72,72,72,72,72,]),'functionTerms':([77,],[115,]),'return':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'runFunctionTerms':([46,],[83,]),'term':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[31,31,31,63,68,79,84,87,91,31,97,68,68,105,106,107,108,120,121,124,126,79,31,129,130,131,132,137,138,140,68,68,149,150,68,155,156,157,31,31,31,31,31,31,31,31,31,31,31,31,]),'break':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'runFunction':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[33,41,33,41,41,41,41,41,41,33,41,41,41,41,41,41,41,41,41,41,41,41,33,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,33,33,33,33,33,33,33,33,33,33,33,33,]),'array_term':([0,5,19,27,37,43,46,48,50,51,56,57,58,61,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[13,42,13,42,42,42,42,42,42,13,42,42,42,101,42,42,42,42,42,42,42,42,42,13,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'condition':([37,57,58,112,113,136,],[73,98,99,143,144,154,]),'statements':([0,51,145,148,152,153,159,175,],[19,92,158,161,162,163,166,176,]),'if':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'else':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'less_equal':([37,57,58,112,113,136,],[70,70,70,70,70,70,]),'DIV_ext':([0,5,19,27,37,43,46,48,50,51,56,57,58,64,65,66,67,81,82,86,88,90,92,93,94,95,96,104,109,110,112,113,119,123,136,139,141,142,145,148,152,153,158,159,161,162,163,166,175,176,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'print':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'elif':([0,19,51,92,145,148,152,153,158,159,161,162,163,166,175,176,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> segment","S'",1,None,None,None),
  ('segment -> statements','segment',1,'p_segment','py_syn.py',6),
  ('statements -> statements statement','statements',2,'p_statements','py_syn.py',11),
  ('statements -> statement','statements',1,'p_statements','py_syn.py',12),
  ('statement -> assignment','statement',1,'p_statement','py_syn.py',22),
  ('statement -> operation','statement',1,'p_statement','py_syn.py',23),
  ('statement -> print','statement',1,'p_statement','py_syn.py',24),
  ('statement -> if','statement',1,'p_statement','py_syn.py',25),
  ('statement -> else','statement',1,'p_statement','py_syn.py',26),
  ('statement -> elif','statement',1,'p_statement','py_syn.py',27),
  ('statement -> while','statement',1,'p_statement','py_syn.py',28),
  ('statement -> break','statement',1,'p_statement','py_syn.py',29),
  ('statement -> for','statement',1,'p_statement','py_syn.py',30),
  ('statement -> function','statement',1,'p_statement','py_syn.py',31),
  ('statement -> runFunction','statement',1,'p_statement','py_syn.py',32),
  ('statement -> return','statement',1,'p_statement','py_syn.py',33),
  ('return -> RETURN','return',1,'p_return','py_syn.py',40),
  ('return -> RETURN term','return',2,'p_return','py_syn.py',41),
  ('function -> DEF VARIABLE ( functionTerms ) { statements }','function',8,'p_function','py_syn.py',52),
  ('function -> DEF VARIABLE ( ) { statements }','function',7,'p_function','py_syn.py',53),
  ('runFunction -> VARIABLE ( runFunctionTerms )','runFunction',4,'p_runFunction','py_syn.py',68),
  ('runFunction -> VARIABLE ( )','runFunction',3,'p_runFunction','py_syn.py',69),
  ('runFunctionTerms -> term','runFunctionTerms',1,'p_runFunctionTerms','py_syn.py',81),
  ('runFunctionTerms -> runFunctionTerms , term','runFunctionTerms',3,'p_runFunctionTerms','py_syn.py',82),
  ('functionTerms -> VARIABLE','functionTerms',1,'p_functionTerms','py_syn.py',93),
  ('functionTerms -> functionTerms , VARIABLE','functionTerms',3,'p_functionTerms','py_syn.py',94),
  ('break -> BREAK','break',1,'p_BREAK','py_syn.py',105),
  ('while -> WHILE ( condition ) { statements }','while',7,'p_while','py_syn.py',111),
  ('for -> FOR ( assignment ; condition ; VARIABLE + + ) { statements }','for',13,'p_for','py_syn.py',120),
  ('if -> IF ( condition ) { statements }','if',7,'p_if','py_syn.py',130),
  ('else -> ELSE { statements }','else',4,'p_else','py_syn.py',138),
  ('elif -> ELIF ( condition ) { statements }','elif',7,'p_elif','py_syn.py',145),
  ('and -> condition AND condition','and',3,'p_and','py_syn.py',153),
  ('or -> condition OR condition','or',3,'p_or','py_syn.py',163),
  ('condition -> greater','condition',1,'p_condition','py_syn.py',171),
  ('condition -> greater_equal','condition',1,'p_condition','py_syn.py',172),
  ('condition -> less','condition',1,'p_condition','py_syn.py',173),
  ('condition -> less_equal','condition',1,'p_condition','py_syn.py',174),
  ('condition -> equal_equal','condition',1,'p_condition','py_syn.py',175),
  ('condition -> and','condition',1,'p_condition','py_syn.py',176),
  ('condition -> or','condition',1,'p_condition','py_syn.py',177),
  ('greater -> term > term','greater',3,'p_greater','py_syn.py',183),
  ('greater_equal -> term > = term','greater_equal',4,'p_greater_equal','py_syn.py',191),
  ('less -> term < term','less',3,'p_less','py_syn.py',200),
  ('less_equal -> term < = term','less_equal',4,'p_less_equal','py_syn.py',208),
  ('equal_equal -> term = = term','equal_equal',4,'p_equal_equal','py_syn.py',216),
  ('assignment -> VARIABLE = term','assignment',3,'p_assignment','py_syn.py',224),
  ('assignment -> VARIABLE = array','assignment',3,'p_assignment','py_syn.py',225),
  ('assignment -> array_term = term','assignment',3,'p_assignment','py_syn.py',226),
  ('assignment -> VARIABLE + = term','assignment',4,'p_assignment','py_syn.py',227),
  ('assignment -> array_term + = term','assignment',4,'p_assignment','py_syn.py',228),
  ('assignment -> VARIABLE - = term','assignment',4,'p_assignment','py_syn.py',229),
  ('assignment -> array_term - = term','assignment',4,'p_assignment','py_syn.py',230),
  ('assignment -> VARIABLE * = term','assignment',4,'p_assignment','py_syn.py',231),
  ('assignment -> array_term * = term','assignment',4,'p_assignment','py_syn.py',232),
  ('assignment -> VARIABLE / = term','assignment',4,'p_assignment','py_syn.py',233),
  ('assignment -> array_term / = term','assignment',4,'p_assignment','py_syn.py',234),
  ('operation -> ADD','operation',1,'p_operation','py_syn.py',258),
  ('operation -> SUB','operation',1,'p_operation','py_syn.py',259),
  ('operation -> MUL','operation',1,'p_operation','py_syn.py',260),
  ('operation -> DIV','operation',1,'p_operation','py_syn.py',261),
  ('operation -> DIV_ext','operation',1,'p_operation','py_syn.py',262),
  ('operation -> ( operation )','operation',3,'p_operation','py_syn.py',263),
  ('ADD -> term + term','ADD',3,'p_ADD','py_syn.py',272),
  ('SUB -> term - term','SUB',3,'p_SUB','py_syn.py',281),
  ('MUL -> term * term','MUL',3,'p_MUL','py_syn.py',289),
  ('DIV -> term / term','DIV',3,'p_DIV','py_syn.py',298),
  ('DIV_ext -> term / / term','DIV_ext',4,'p_DIV_ext','py_syn.py',306),
  ('print -> PRINT ( pcontent )','print',4,'p_print','py_syn.py',313),
  ('array_term -> VARIABLE [ term ]','array_term',4,'p_array_term','py_syn.py',320),
  ('array -> [ pcontent ]','array',3,'p_array','py_syn.py',329),
  ('pcontent -> pcontent , term','pcontent',3,'p_pcontent','py_syn.py',337),
  ('pcontent -> term','pcontent',1,'p_pcontent','py_syn.py',338),
  ('term -> VARIABLE','term',1,'p_term','py_syn.py',349),
  ('term -> NUMBER','term',1,'p_term','py_syn.py',350),
  ('term -> operation','term',1,'p_term','py_syn.py',351),
  ('term -> array_term','term',1,'p_term','py_syn.py',352),
  ('term -> len','term',1,'p_term','py_syn.py',353),
  ('term -> runFunction','term',1,'p_term','py_syn.py',354),
  ('len -> LEN ( VARIABLE )','len',4,'p_len','py_syn.py',361),
]
