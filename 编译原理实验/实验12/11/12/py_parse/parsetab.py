
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BREAK CLASS DEF ELIF ELSE FOR IF INIT LEN NUMBER OR PRINT RETURN VARIABLE WHILEsegment : statementsstatements : statements statement\n                  | statement\n    statement : assignment\n             | operation\n             | print\n             | if\n             | else\n             | elif\n             | while\n             | break\n             | for\n             | function\n             | runFunction\n             | return\n    return : RETURN\n              | RETURN term\n    \n    function : DEF VARIABLE '(' functionTerms ')'  '{' statements '}'\n             | DEF VARIABLE '('  ')'  '{' statements '}'\n    \n    runFunction : VARIABLE '(' runFunctionTerms ')'\n                | VARIABLE '('  ')'\n    \n    runFunctionTerms : term\n                  | runFunctionTerms ',' term\n    \n    functionTerms : VARIABLE\n                  | functionTerms ',' VARIABLE\n    \n    break : BREAK\n    \n    while : WHILE '(' condition ')' '{' statements '}'\n    \n    for : FOR '(' assignment ';' condition ';' VARIABLE '+' '+' ')' '{' statements '}'\n    \n    if : IF '(' condition ')' '{' statements '}'\n    \n    else : ELSE '{' statements '}'\n    \n    elif : ELIF '(' condition ')' '{' statements '}'\n    \n    and : condition AND condition\n    \n    or : condition OR condition\n    \n    condition : greater\n              | greater_equal\n              | less\n              | less_equal\n              | equal_equal\n              | and\n              | or\n    \n    greater   : term '>' term\n              \n    greater_equal   : term '>' '=' term\n              \n    less   : term '<' term\n              \n    less_equal   : term '<' '=' term\n              \n    equal_equal   : term '=' '=' term\n              \n    assignment : VARIABLE '=' term\n                | VARIABLE '=' array\n                | array_term '=' term\n                | VARIABLE '+' '=' term\n                | array_term '+' '=' term\n                | VARIABLE '-' '=' term\n                | array_term '-' '=' term\n                | VARIABLE '*' '=' term\n                | array_term '*' '=' term\n                | VARIABLE '/' '=' term\n                | array_term '/' '=' term\n    \n    operation : ADD\n              | SUB\n              | MUL\n              | DIV\n              | DIV_ext\n              | '(' operation ')'\n    \n    ADD : term '+' term\n\n    \n    SUB : term '-' term\n    \n    MUL : term '*' term\n\n    \n    DIV : term '/' term\n    \n    DIV_ext : term '/' '/' term\n    print : PRINT '(' pcontent ')' \n     array_term : VARIABLE '[' term ']'\n    \n    array : '[' pcontent ']'\n    \n    pcontent : pcontent ',' term\n             | term\n    \n    term : VARIABLE\n         | NUMBER\n         | operation\n         | array_term\n         | len\n         | runFunction\n    \n    len : LEN '(' VARIABLE ')'\n    "
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,30,32,33,34,35,37,38,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,76,79,80,81,82,83,84,85,86,87,88,89,101,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,129,130,133,137,138,141,145,146,148,149,150,153,154,155,159,160,161,162,164,165,166,167,169,170,172,175,176,177,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,55,-26,64,55,-74,-77,-2,55,55,55,55,55,55,55,55,-73,-76,-78,55,55,16,55,55,105,-17,-75,108,-46,-47,55,55,55,55,55,-21,-63,-64,-65,-66,55,-48,55,55,55,55,-62,16,134,-49,-51,-53,-55,-20,55,-69,-67,-50,-52,-54,-56,-68,55,55,55,55,55,-30,55,-79,-70,16,55,55,55,16,16,163,16,16,16,16,168,16,16,-29,-31,-27,16,-19,-18,16,16,-28,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,76,79,80,81,82,83,84,85,86,87,88,89,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,129,130,133,137,138,141,145,146,148,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,43,-57,-58,-59,-60,-61,24,58,59,61,62,-26,63,24,-74,-77,67,-2,24,24,24,24,24,24,24,24,43,-76,-78,24,24,24,24,24,107,-17,-75,-46,-47,24,24,24,24,24,-21,-63,-64,-65,-66,24,-48,24,24,24,24,-62,24,-49,-51,-53,-55,-20,24,-69,-67,-50,-52,-54,-56,-68,24,24,24,24,24,-30,24,-79,-70,24,24,24,24,24,24,24,24,24,24,24,24,-29,-31,-27,24,-19,-18,24,24,-28,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,25,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,25,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,25,25,25,25,25,25,25,25,25,-29,-31,-27,25,-19,-18,25,25,-28,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,26,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,26,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,26,26,26,26,26,26,26,26,26,-29,-31,-27,26,-19,-18,26,26,-28,]),'ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,27,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,27,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,27,27,27,27,27,27,27,27,27,-29,-31,-27,27,-19,-18,27,27,-28,]),'ELIF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,28,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,28,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,28,28,28,28,28,28,28,28,28,-29,-31,-27,28,-19,-18,28,28,-28,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,29,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,29,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,29,29,29,29,29,29,29,29,29,-29,-31,-27,29,-19,-18,29,29,-28,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,30,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,30,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,30,30,30,30,30,30,30,30,30,-29,-31,-27,30,-19,-18,30,30,-28,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,31,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,31,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,31,31,31,31,31,31,31,31,31,-29,-31,-27,31,-19,-18,31,31,-28,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,32,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,32,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,32,32,32,32,32,32,32,32,32,-29,-31,-27,32,-19,-18,32,32,-28,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,60,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,141,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,33,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,33,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,33,33,33,33,33,33,33,33,33,-29,-31,-27,33,-19,-18,33,33,-28,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,30,33,34,35,37,38,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,65,66,68,69,70,71,72,73,74,76,79,80,81,82,83,84,85,86,87,88,89,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,129,130,133,137,138,141,145,146,148,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,34,-26,34,-74,-77,-2,34,34,34,34,34,34,34,34,-73,-76,-78,34,34,34,34,34,-17,-75,-46,-47,34,34,34,34,34,-21,-63,-64,-65,-66,34,-48,34,34,34,34,-62,34,-49,-51,-53,-55,-20,34,-69,-67,-50,-52,-54,-56,-68,34,34,34,34,34,-30,34,-79,-70,34,34,34,34,34,34,34,34,34,34,34,34,-29,-31,-27,34,-19,-18,34,34,-28,]),'LEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,30,33,34,35,37,38,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,65,66,68,69,70,71,72,73,74,76,79,80,81,82,83,84,85,86,87,88,89,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,129,130,133,137,138,141,145,146,148,149,150,154,155,159,160,162,164,165,166,167,169,170,172,175,176,177,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,36,-26,36,-74,-77,-2,36,36,36,36,36,36,36,36,-73,-76,-78,36,36,36,36,36,-17,-75,-46,-47,36,36,36,36,36,-21,-63,-64,-65,-66,36,-48,36,36,36,36,-62,36,-49,-51,-53,-55,-20,36,-69,-67,-50,-52,-54,-56,-68,36,36,36,36,36,-30,36,-79,-70,36,36,36,36,36,36,36,36,36,36,36,36,-29,-31,-27,36,-19,-18,36,36,-28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,65,66,68,69,76,79,80,81,82,84,89,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,165,166,167,170,172,177,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,-29,-31,-27,-19,-18,-28,]),'}':([3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,30,33,34,35,37,55,56,57,65,66,68,69,76,79,80,81,82,84,89,101,110,111,112,113,114,116,117,118,119,120,121,122,130,137,138,155,159,160,164,165,166,167,169,170,172,176,177,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-57,-58,-59,-60,-61,-26,-16,-74,-77,-2,-73,-76,-78,-17,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,130,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-68,-30,-79,-70,165,166,167,170,-29,-31,-27,172,-19,-18,177,-28,]),'+':([5,14,16,17,18,19,20,21,22,23,34,35,54,55,56,57,65,66,68,76,77,78,79,80,81,82,84,89,91,100,105,106,110,111,112,113,114,116,117,118,119,120,121,137,139,140,144,147,156,157,158,168,171,],[-75,-78,39,45,50,-57,-58,-59,-60,-61,-74,-77,-75,-73,-76,-78,45,-75,45,-21,45,45,45,45,45,45,45,-62,45,45,39,50,45,45,45,45,-20,-69,45,45,45,45,45,-79,45,45,45,45,45,45,45,171,173,]),'-':([5,14,16,17,18,19,20,21,22,23,34,35,54,55,56,57,65,66,68,76,77,78,79,80,81,82,84,89,91,100,105,106,110,111,112,113,114,116,117,118,119,120,121,137,139,140,144,147,156,157,158,],[-75,-78,40,46,51,-57,-58,-59,-60,-61,-74,-77,-75,-73,-76,-78,46,-75,46,-21,46,46,46,46,46,46,46,-62,46,46,40,51,46,46,46,46,-20,-69,46,46,46,46,46,-79,46,46,46,46,46,46,46,]),'*':([5,14,16,17,18,19,20,21,22,23,34,35,54,55,56,57,65,66,68,76,77,78,79,80,81,82,84,89,91,100,105,106,110,111,112,113,114,116,117,118,119,120,121,137,139,140,144,147,156,157,158,],[-75,-78,41,47,52,-57,-58,-59,-60,-61,-74,-77,-75,-73,-76,-78,47,-75,47,-21,47,47,47,47,47,47,47,-62,47,47,41,52,47,47,47,47,-20,-69,47,47,47,47,47,-79,47,47,47,47,47,47,47,]),'/':([5,14,16,17,18,19,20,21,22,23,34,35,48,54,55,56,57,65,66,68,76,77,78,79,80,81,82,84,89,91,100,105,106,110,111,112,113,114,116,117,118,119,120,121,137,139,140,144,147,156,157,158,],[-75,-78,42,48,53,-57,-58,-59,-60,-61,-74,-77,83,-75,-73,-76,-78,48,-75,48,-21,48,48,48,48,48,48,48,-62,48,48,42,53,48,48,48,48,-20,-69,48,48,48,48,48,-79,48,48,48,48,48,48,48,]),'=':([16,18,19,20,21,22,23,34,35,39,40,41,42,50,51,52,53,55,56,57,66,76,79,80,81,82,89,100,105,106,114,116,117,127,128,129,137,],[38,49,-57,-58,-59,-60,-61,-74,-77,71,72,73,74,85,86,87,88,-73,-76,-78,-75,-21,-63,-64,-65,-66,-62,128,38,49,-20,-69,-67,145,146,148,-79,]),'[':([16,38,55,105,],[44,70,44,44,]),')':([19,20,21,22,23,34,35,43,54,55,56,57,66,75,76,77,79,80,81,82,89,90,91,92,93,94,95,96,97,98,99,102,103,107,108,114,116,117,134,135,137,139,140,142,143,144,147,156,157,158,163,173,],[-57,-58,-59,-60,-61,-74,-77,76,89,-73,-76,-78,-75,114,-21,-22,-63,-64,-65,-66,-62,122,-72,124,-34,-35,-36,-37,-38,-39,-40,131,132,136,137,-20,-69,-67,-24,152,-79,-23,-71,-32,-33,-41,-43,-42,-45,-44,-25,174,]),';':([19,20,21,22,23,34,35,55,56,57,66,68,69,76,79,80,81,82,84,89,93,94,95,96,97,98,99,104,110,111,112,113,114,116,117,118,119,120,121,137,138,142,143,144,147,151,156,157,158,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-46,-47,-21,-63,-64,-65,-66,-48,-62,-34,-35,-36,-37,-38,-39,-40,133,-49,-51,-53,-55,-20,-69,-67,-50,-52,-54,-56,-79,-70,-32,-33,-41,-43,161,-42,-45,-44,]),',':([19,20,21,22,23,34,35,55,56,57,66,75,76,77,79,80,81,82,89,90,91,109,114,116,117,134,135,137,139,140,163,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,115,-21,-22,-63,-64,-65,-66,-62,123,-72,123,-20,-69,-67,-24,153,-79,-23,-71,-25,]),']':([19,20,21,22,23,34,35,55,56,57,66,76,78,79,80,81,82,89,91,109,114,116,117,137,140,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-21,116,-63,-64,-65,-66,-62,-72,138,-20,-69,-67,-79,-71,]),'>':([19,20,21,22,23,34,35,55,56,57,66,76,79,80,81,82,89,100,114,116,117,137,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-21,-63,-64,-65,-66,-62,127,-20,-69,-67,-79,]),'<':([19,20,21,22,23,34,35,55,56,57,66,76,79,80,81,82,89,100,114,116,117,137,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-21,-63,-64,-65,-66,-62,129,-20,-69,-67,-79,]),'AND':([19,20,21,22,23,34,35,55,56,57,66,76,79,80,81,82,89,92,93,94,95,96,97,98,99,102,103,114,116,117,137,142,143,144,147,151,156,157,158,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-21,-63,-64,-65,-66,-62,125,-34,-35,-36,-37,-38,-39,-40,125,125,-20,-69,-67,-79,125,125,-41,-43,125,-42,-45,-44,]),'OR':([19,20,21,22,23,34,35,55,56,57,66,76,79,80,81,82,89,92,93,94,95,96,97,98,99,102,103,114,116,117,137,142,143,144,147,151,156,157,158,],[-57,-58,-59,-60,-61,-74,-77,-73,-76,-78,-75,-21,-63,-64,-65,-66,-62,126,-34,-35,-36,-37,-38,-39,-40,126,126,-20,-69,-67,-79,126,126,-41,-43,126,-42,-45,-44,]),'{':([27,124,131,132,136,152,174,],[60,141,149,150,154,162,175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'segment':([0,],[1,]),'statements':([0,60,141,149,150,154,162,175,],[2,101,155,159,160,164,169,176,]),'statement':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[3,37,3,37,3,3,3,3,37,37,37,3,37,37,3,37,]),'assignment':([0,2,60,63,101,141,149,150,154,155,159,160,162,164,169,175,176,],[4,4,4,104,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operation':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[5,5,54,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,5,66,66,66,5,5,5,5,5,5,5,5,5,5,5,]),'print':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'else':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'elif':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'break':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'for':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'runFunction':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[14,14,57,57,57,57,57,57,57,57,57,57,57,57,14,57,57,57,57,57,57,57,57,57,57,57,57,14,57,57,57,57,57,57,57,14,57,57,57,14,14,14,14,14,14,14,14,14,14,14,]),'return':([0,2,60,101,141,149,150,154,155,159,160,162,164,169,175,176,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'term':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[17,17,17,65,68,77,78,79,80,81,82,84,91,100,17,100,100,91,110,111,112,113,117,118,119,120,121,17,139,140,100,100,144,147,100,17,156,157,158,17,17,17,17,17,17,17,17,17,17,17,]),'array_term':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,63,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[18,18,56,56,56,56,56,56,56,56,56,56,56,56,18,56,56,106,56,56,56,56,56,56,56,56,56,56,18,56,56,56,56,56,56,56,18,56,56,56,18,18,18,18,18,18,18,18,18,18,18,]),'ADD':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SUB':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'MUL':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DIV':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DIV_ext':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'len':([0,2,24,33,38,43,44,45,46,47,48,49,58,59,60,61,62,70,71,72,73,74,83,85,86,87,88,101,115,123,125,126,127,129,133,141,145,146,148,149,150,154,155,159,160,162,164,169,175,176,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'array':([38,],[69,]),'runFunctionTerms':([43,],[75,]),'pcontent':([58,70,],[90,109,]),'condition':([59,61,62,125,126,133,],[92,102,103,142,143,151,]),'greater':([59,61,62,125,126,133,],[93,93,93,93,93,93,]),'greater_equal':([59,61,62,125,126,133,],[94,94,94,94,94,94,]),'less':([59,61,62,125,126,133,],[95,95,95,95,95,95,]),'less_equal':([59,61,62,125,126,133,],[96,96,96,96,96,96,]),'equal_equal':([59,61,62,125,126,133,],[97,97,97,97,97,97,]),'and':([59,61,62,125,126,133,],[98,98,98,98,98,98,]),'or':([59,61,62,125,126,133,],[99,99,99,99,99,99,]),'functionTerms':([107,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> segment","S'",1,None,None,None),
  ('segment -> statements','segment',1,'p_segment','py_syn.py',6),
  ('statements -> statements statement','statements',2,'p_statements','py_syn.py',11),
  ('statements -> statement','statements',1,'p_statements','py_syn.py',12),
  ('statement -> assignment','statement',1,'p_statement','py_syn.py',22),
  ('statement -> operation','statement',1,'p_statement','py_syn.py',23),
  ('statement -> print','statement',1,'p_statement','py_syn.py',24),
  ('statement -> if','statement',1,'p_statement','py_syn.py',25),
  ('statement -> else','statement',1,'p_statement','py_syn.py',26),
  ('statement -> elif','statement',1,'p_statement','py_syn.py',27),
  ('statement -> while','statement',1,'p_statement','py_syn.py',28),
  ('statement -> break','statement',1,'p_statement','py_syn.py',29),
  ('statement -> for','statement',1,'p_statement','py_syn.py',30),
  ('statement -> function','statement',1,'p_statement','py_syn.py',31),
  ('statement -> runFunction','statement',1,'p_statement','py_syn.py',32),
  ('statement -> return','statement',1,'p_statement','py_syn.py',33),
  ('return -> RETURN','return',1,'p_return','py_syn.py',40),
  ('return -> RETURN term','return',2,'p_return','py_syn.py',41),
  ('function -> DEF VARIABLE ( functionTerms ) { statements }','function',8,'p_function','py_syn.py',52),
  ('function -> DEF VARIABLE ( ) { statements }','function',7,'p_function','py_syn.py',53),
  ('runFunction -> VARIABLE ( runFunctionTerms )','runFunction',4,'p_runFunction','py_syn.py',68),
  ('runFunction -> VARIABLE ( )','runFunction',3,'p_runFunction','py_syn.py',69),
  ('runFunctionTerms -> term','runFunctionTerms',1,'p_runFunctionTerms','py_syn.py',81),
  ('runFunctionTerms -> runFunctionTerms , term','runFunctionTerms',3,'p_runFunctionTerms','py_syn.py',82),
  ('functionTerms -> VARIABLE','functionTerms',1,'p_functionTerms','py_syn.py',93),
  ('functionTerms -> functionTerms , VARIABLE','functionTerms',3,'p_functionTerms','py_syn.py',94),
  ('break -> BREAK','break',1,'p_BREAK','py_syn.py',105),
  ('while -> WHILE ( condition ) { statements }','while',7,'p_while','py_syn.py',111),
  ('for -> FOR ( assignment ; condition ; VARIABLE + + ) { statements }','for',13,'p_for','py_syn.py',120),
  ('if -> IF ( condition ) { statements }','if',7,'p_if','py_syn.py',130),
  ('else -> ELSE { statements }','else',4,'p_else','py_syn.py',138),
  ('elif -> ELIF ( condition ) { statements }','elif',7,'p_elif','py_syn.py',145),
  ('and -> condition AND condition','and',3,'p_and','py_syn.py',153),
  ('or -> condition OR condition','or',3,'p_or','py_syn.py',163),
  ('condition -> greater','condition',1,'p_condition','py_syn.py',171),
  ('condition -> greater_equal','condition',1,'p_condition','py_syn.py',172),
  ('condition -> less','condition',1,'p_condition','py_syn.py',173),
  ('condition -> less_equal','condition',1,'p_condition','py_syn.py',174),
  ('condition -> equal_equal','condition',1,'p_condition','py_syn.py',175),
  ('condition -> and','condition',1,'p_condition','py_syn.py',176),
  ('condition -> or','condition',1,'p_condition','py_syn.py',177),
  ('greater -> term > term','greater',3,'p_greater','py_syn.py',183),
  ('greater_equal -> term > = term','greater_equal',4,'p_greater_equal','py_syn.py',191),
  ('less -> term < term','less',3,'p_less','py_syn.py',200),
  ('less_equal -> term < = term','less_equal',4,'p_less_equal','py_syn.py',208),
  ('equal_equal -> term = = term','equal_equal',4,'p_equal_equal','py_syn.py',216),
  ('assignment -> VARIABLE = term','assignment',3,'p_assignment','py_syn.py',224),
  ('assignment -> VARIABLE = array','assignment',3,'p_assignment','py_syn.py',225),
  ('assignment -> array_term = term','assignment',3,'p_assignment','py_syn.py',226),
  ('assignment -> VARIABLE + = term','assignment',4,'p_assignment','py_syn.py',227),
  ('assignment -> array_term + = term','assignment',4,'p_assignment','py_syn.py',228),
  ('assignment -> VARIABLE - = term','assignment',4,'p_assignment','py_syn.py',229),
  ('assignment -> array_term - = term','assignment',4,'p_assignment','py_syn.py',230),
  ('assignment -> VARIABLE * = term','assignment',4,'p_assignment','py_syn.py',231),
  ('assignment -> array_term * = term','assignment',4,'p_assignment','py_syn.py',232),
  ('assignment -> VARIABLE / = term','assignment',4,'p_assignment','py_syn.py',233),
  ('assignment -> array_term / = term','assignment',4,'p_assignment','py_syn.py',234),
  ('operation -> ADD','operation',1,'p_operation','py_syn.py',258),
  ('operation -> SUB','operation',1,'p_operation','py_syn.py',259),
  ('operation -> MUL','operation',1,'p_operation','py_syn.py',260),
  ('operation -> DIV','operation',1,'p_operation','py_syn.py',261),
  ('operation -> DIV_ext','operation',1,'p_operation','py_syn.py',262),
  ('operation -> ( operation )','operation',3,'p_operation','py_syn.py',263),
  ('ADD -> term + term','ADD',3,'p_ADD','py_syn.py',272),
  ('SUB -> term - term','SUB',3,'p_SUB','py_syn.py',281),
  ('MUL -> term * term','MUL',3,'p_MUL','py_syn.py',289),
  ('DIV -> term / term','DIV',3,'p_DIV','py_syn.py',298),
  ('DIV_ext -> term / / term','DIV_ext',4,'p_DIV_ext','py_syn.py',306),
  ('print -> PRINT ( pcontent )','print',4,'p_print','py_syn.py',313),
  ('array_term -> VARIABLE [ term ]','array_term',4,'p_array_term','py_syn.py',320),
  ('array -> [ pcontent ]','array',3,'p_array','py_syn.py',329),
  ('pcontent -> pcontent , term','pcontent',3,'p_pcontent','py_syn.py',337),
  ('pcontent -> term','pcontent',1,'p_pcontent','py_syn.py',338),
  ('term -> VARIABLE','term',1,'p_term','py_syn.py',349),
  ('term -> NUMBER','term',1,'p_term','py_syn.py',350),
  ('term -> operation','term',1,'p_term','py_syn.py',351),
  ('term -> array_term','term',1,'p_term','py_syn.py',352),
  ('term -> len','term',1,'p_term','py_syn.py',353),
  ('term -> runFunction','term',1,'p_term','py_syn.py',354),
  ('len -> LEN ( VARIABLE )','len',4,'p_len','py_syn.py',361),
]
